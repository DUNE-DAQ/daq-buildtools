#!/bin/bash

WORK_DIR=$PWD
timenow="date \"+%D %T\""

requirements_edit_overwrite=true

###
# Default virtual env name
###
VENV_NAME="moo_venv"

###
# Check if inside a virtualenv already
###
if [[ "$VIRTUAL_ENV" != "" ]]
then
  echo "ERROR: [`eval $timenow`]: You are already in a virtual env. Please deactivate first."
  return 11
fi

###
# Check if python from cvmfs has been set up.
# Add version check in the future.
###
if [ -z "$SETUP_PYTHON" ]; then
    echo "INFO [`eval $timenow`]: Python UPS product is not set, setting it from cvmfs now."
    setup python
    if [[ $? != "0" ]]; then
        echo "ERROR [`eval $timenow`]: setup python failed, please check if you have sourced the \"setup_build_environment\" script and run this script again."
        return 10
    fi
else
    echo "INFO [`eval $timenow`]: Python UPS product $PYTHON_VERSION has been set up."
fi

###
# Check existance/create the default virtual_env
###
if [ -f "$WORK_DIR/$VENV_NAME/pyvenv.cfg" ]; then
    echo "INFO [`eval $timenow`]: virtual_env $VENV_NAME already exists. "
    cat "$WORK_DIR/$VENV_NAME/pyvenv.cfg"
else
    echo "INFO [`eval $timenow`]: creating virtual_env $VENV_NAME. "
    python -m venv $VENV_NAME
fi

###
# Activate the venv
###
echo "INFO [`eval $timenow`]: activating virtual_env $VENV_NAME. "
source $WORK_DIR/$VENV_NAME/bin/activate
 
###
# Install required modules except moo
###
if [ -f "$WORK_DIR/pyvenv_requirements.txt" ]; then
    echo "INFO [`eval $timenow`]: found existing requirements file: $WORK_DIR/pyvenv_requirements.txt"
    if $requirements_edit_overwrite; then
        curl -o $WORK_DIR/.tmp_python_setup https://raw.githubusercontent.com/DUNE-DAQ/daq-buildtools/dingpf/python-venv/scripts/pyvenv_requirements.txt
        diff_req=$(diff $WORK_DIR/.tmp_python_setup $WORK_DIR/pyvenv_requirements.txt)
        if [[ -n $diff_req ]]; then
	    echo "INFO [`eval $timenow`]: Overwriting is turned on. The exisiting file will be moved to: $moved_req"
	    moved_req=$WORK_DIR/pyvenv_requirements.txt.`date "+%y%m%d%H%M%S"`
	    mv $WORK_DIR/pyvenv_requirements.txt $moved_req
            mv $WORK_DIR/.tmp_python_setup $WORK_DIR/pyvenv_requirements.txt
        else
            rm -f $WORK_DIR/.tmp_python_setup
        fi
    fi
else
    curl -O https://raw.githubusercontent.com/DUNE-DAQ/daq-buildtools/dingpf/python-venv/scripts/pyvenv_requirements.txt
fi
echo "INFO [`eval $timenow`]: checking/installing required modules for virtual_env $VENV_NAME. "
python -m pip install -r pyvenv_requirements.txt
if [[ $? != "0" ]]; then
    echo "ERROR [`eval $timenow`]: Installing required modules failed."
    return 12
fi

###
# special handling of the moo module since PyPI has a module with same name.
##
if python -c "import moo" &> /dev/null; then
    echo "INFO [`eval $timenow`]: moo is installed."
    pip list|grep moo
else
    echo "INFO [`eval $timenow`]: moo is not installed. Install it now."
    pip install git+git://github.com/brettviren/moo.git
    if [[ $? != "0" ]]; then
        echo "ERROR [`eval $timenow`]: Installing moo failed."
        return 13
    fi
fi


echo "INFO [`eval $timenow`]: $VEVN_NAME has been activated, use \"deactivate\" to exit the venv."
